version: '3.8'

services:
  db:
    image: postgres:15
    container_name: genbi-postgres
    environment:
      POSTGRES_USER: genbi_user
      POSTGRES_PASSWORD: genbi_password
      POSTGRES_DB: genbi_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5433:5432"  # Используете 5433, чтобы избежать конфликтов с локальным PostgreSQL
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U genbi_user -d genbi_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - genbi-network

  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: backend
    environment:
      DATABASE_URL: postgresql+asyncpg://genbi_user:genbi_password@db:5432/genbi_db
      SECRET_KEY: your-super-secret-key-change-in-production-12345
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: gpt-4
      DEBUG: "true"
      PYTHONPATH: /app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./app:/app/app:ro  # Read-only для безопасности
      - ./alembic:/app/alembic:ro
      - ./scripts:/app/scripts:ro
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        python -c 'import time; time.sleep(5)' &&
        echo 'Running migrations...' &&
        alembic upgrade head &&
        echo 'Starting server...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "
    restart: unless-stopped
    networks:
      - genbi-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
    driver: local

networks:
  genbi-network:
    driver: bridge
